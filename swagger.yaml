swagger: "2.0"
info:
  description: "Dedicated search API"
  version: "1.0.1"
  title: "dp-conceptual-search"
  license:
    name: "Open Government Licence v3.0"
    url: "http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
schemes:
  - "http"
host: localhost:5000
tags:
  - name: "search"
  - name: "conceptual_search"
  - name: "recommend"
  - name: "spellcheck"
  - name: "healthcheck"

paths:
  /search:
    post:
      tags:
        - search
      summary: "Proxy an Elasticsearch query over HTTP"
      description: "Proxy an Elasticsearch query over HTTP"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          required: true
          description: The Elasticsearch query to be executed.
          schema:
            type: object
            example: {match_all: {}}
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchResponse'

        400:
          description: request body not specified

  /search/{list_type}/{endpoint}:
    get:
      tags:
        - search
      summary: "Default ONS query API"
      description: "Default ONS query API"
      parameters:
        - in: path
          name: list_type
          required: true
          type: string
          enum:
            - ons
            - onsdata
            - onspublications
        - in: path
          name: endpoint
          required: true
          type: string
          enum:
            - content
            - counts
            - featured
            - departments
        - in: query
          name: q
          description: "Query search term"
          type: string
          required: true
        - in: query
          name: page
          description: "Current page"
          type: integer
          required: false
        - in: query
          name: size
          description: "Page size"
          type: integer
          required: false
        - in: query
          name: sort_by
          required: false
          type: string
          enum:
            - first_letter
            - title
            - relevance
            - release_date
            - release_date_asc
        - in: query
          name: filter
          required: false
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchResponse'
        400:
          description: Query term not specified
        404:
          description: Unknown endpoint
    post:
      tags:
        - search
      summary: "Default ONS query API"
      description: "Default ONS query API"
      parameters:
        - in: path
          name: list_type
          required: true
          type: string
          enum:
            - ons
            - onsdata
            - onspublications
        - in: path
          name: endpoint
          required: true
          type: string
          enum:
            - content
            - counts
            - featured
            - departments
        - in: query
          name: q
          description: "Query search term"
          type: string
          required: true
        - in: query
          name: page
          description: "Current page"
          type: integer
          required: false
        - in: query
          name: size
          description: "Page size"
          type: integer
          required: false
          minimum: 1
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchResponse'
        400:
          description: Query term not specified
        404:
          description: Unknown endpoint

  /search/uri/{path}:
    get:
      tags:
        - search
      summary: "Search for a document by it's URI"
      description: "Search for a document by it's URI"
      parameters:
        - in: path
          name: path
          required: true
          description: URI of the desired document
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchResponse'
        404:
          description: No document with the given URI found

  /search/conceptual/{list_type}/{endpoint}:
    post:
      tags:
        - conceptual_search
      summary: "ONS conceptual search API"
      description: "ONS API for performing conceptual search (i.e non-keyword matching with ML)"
      parameters:
        - in: path
          name: list_type
          required: true
          type: string
          enum:
            - ons
            - onsdata
            - onspublications
        - in: path
          name: endpoint
          required: true
          type: string
          enum:
            - content
            - counts
            - featured
        - in: query
          name: q
          description: "Query search term"
          type: string
          required: true
        - in: query
          name: page
          description: "Current page"
          type: integer
          required: false
        - in: query
          name: size
          description: "Page size"
          type: integer
          required: false
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchResponse'

  /search/recommend/similar/:
    post:
      tags:
        - recommend
      parameters:
        - in: query
          name: uri
          type: string
          required: true
          description: "URI of the page for which similar content is wanted"
        - in: query
          name: page
          description: "Current page"
          type: integer
          required: false
        - in: query
          name: size
          description: "Page size"
          type: integer
          required: false
      summary: "Query for recommended content"
      description: "Executes a query which returns content similar to the page at the given path. If the _ga cookie is specified, then the corresponding users session vector is also used."
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SearchResponse'

  /suggest/spelling:
    get:
      tags:
        - spellcheck
      summary: "Query the spell checker API"
      description: "Query the spell checker API"
      parameters:
        - in: query
          name: q
          description: "Query term"
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SuggestResponse'

  /healthcheck:
    get:
      tags:
        - healthcheck
      summary: "Healthcheck API"
      description: "API to query the APP for current health status"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/HealthCheck'


definitions:
  SearchResponse:
    type: object
    properties:
      numberOfResults:
        type: number
        description: "Number of search results which match query"
        example: 80
      took:
        type: number
        description: "Time taken to execute query in mili-seconds"
        example: 530
      results:
        type: array
        description: "List of matching documents for the current page"
        items:
          type: object
      suggestions:
        type: array
        description: "Suggested corrections to the search term (i.e spelling)"
        items:
          type: string
      docCounts:
        $ref: '#/definitions/DocCounts'
      paginator:
        $ref: '#/definitions/Paginator'
      sortBy:
        type: string
        description: "The chosen sort option"
        example: "relevance"
  DocCounts:
    type: object
    description: "Dictionary containing doc counts by content type"
  Paginator:
    type: object
    description: "Object containing pagination information"
    properties:
      numberOfPages:
        type: integer
        description: "Total number of available pages"
      currentPage:
        type: integer
        description: "Current page number"
      start:
        type: integer
        description: "The first page"
      end:
        type: integer
        description: "The last page"
      pages:
        type: array
        description: "List of all available pages"
        items:
          type: integer
  SuggestResponse:
    type: object
    properties:
      input:
        type: string
        description: "The input token"
        example: "rpo"
      correction:
        type: string
        description: "The corrected token"
        example: "rpi"
      probability:
        type: number
        description: "Confidence of the result"
        example: 0.85
  HealthCheck:
    type: object
    properties:
      elasticsearch:
        type: string
        enum:
          - available
          - unavailable
      dp_fasttext:
        type: string
        enum:
          - available
          - unavailable
    